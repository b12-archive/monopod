#! /usr/bin/env node

const commanderToMarkdown = require('commander-to-markdown');
const fs = require('fs');
const commands = require('../_/commands');

[{
  bin: 'monopod',
  target: 'Readme.md',
  logicModule: '..',
}].concat(commands.map(command => ({
  bin: `commands/${command}`,
  target: `Readme/${command}.md`,
  logicModule: `../../${command}`,
}))).forEach((params) => {
  const bin = params.bin;
  const target = params.target;
  const logicModule = params.logicModule;

  const options = commanderToMarkdown(
    `${__dirname}/../bin/${bin}`, { programModules: [logicModule] }
  );

  const readmePath =
    `${__dirname}/../${target}`;
  const currentReadme =
    fs.readFileSync(readmePath, 'utf8');
  const newReadme =
    currentReadme.replace(
      /(<!-- @options start -->)[^]*(<!-- @options end -->)/,
      `$1\n${options}$2`
    );

  fs.writeFileSync(readmePath, newReadme);
});
